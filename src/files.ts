export const files: IconMap = {
  angular: ['angular-cli.json', '.angular-cli.json', 'angular.json'],
  babel: [
    '.babelrc',
    '.babelrc.cjs',
    '.babelrc.js',
    '.babelrc.mjs',
    '.babelrc.json',
    'babel.config.cjs',
    'babel.config.js',
    'babel.config.mjs',
    'babel.config.json',
    'babel-transform.js',
    '.babel-plugin-macrosrc',
    '.babel-plugin-macrosrc.json',
    '.babel-plugin-macrosrc.yaml',
    '.babel-plugin-macrosrc.yml',
    '.babel-plugin-macrosrc.js',
    'babel-plugin-macros.config.js',
  ],
  bash: ['commit-msg', 'pre-commit', 'pre-push', 'post-merge'],
  browserslist: ['browserslist', '.browserslistrc'],
  cargo: ['cargo.toml'],
  cargo_lock: ['cargo.lock'],
  dart: ['.pubignore'],
  docker: ['dockerfile', 'docker-compose.yml', 'docker-compose.yaml'],
  editorconfig: ['.editorconfig'],
  git: [
    '.gitignore',
    '.gitconfig',
    '.gitattributes',
    '.gitmodules',
    '.gitkeep',
    '.git-include',
  ],
  go_mod: ['go.mod', 'go.sum', 'go.work', 'go.work.sum'],
  graphql: [
    '.graphqlconfig',
    '.graphqlrc',
    '.graphqlrc.json',
    '.graphqlrc.js',
    '.graphqlrc.cjs',
    '.graphqlrc.ts',
    '.graphqlrc.toml',
    '.graphqlrc.yaml',
    '.graphqlrc.yml',
    'graphql.config.json',
    'graphql.config.js',
    'graphql.config.ts',
    'graphql.config.toml',
    'graphql.config.yaml',
    'graphql.config.yml',
  ],
  javascript_config: ['jsconfig.json'],
  lua: ['.luacheckrc'],
  makefile: ['makefile', 'gnumakefile', 'kbuild'],
  r: ['.Rhistory'],
  rollup: [
    'rollup.config.js',
    'rollup.config.mjs',
    'rollup.config.ts',
    'rollup-config.js',
    'rollup-config.mjs',
    'rollup-config.ts',
    'rollup.config.common.js',
    'rollup.config.common.mjs',
    'rollup.config.common.ts',
    'rollup.config.base.js',
    'rollup.config.base.mjs',
    'rollup.config.base.ts',
    'rollup.config.prod.js',
    'rollup.config.prod.mjs',
    'rollup.config.prod.ts',
    'rollup.config.dev.js',
    'rollup.config.dev.mjs',
    'rollup.config.dev.ts',
    'rollup.config.prod.vendor.js',
    'rollup.config.prod.vendor.mjs',
    'rollup.config.prod.vendor.ts',
  ],
  ruby_gem: ['gemfile'],
  svelte: [
    'svelte.config.js',
    'svelte.config.cjs',
    'svelte.config.ts',
  ],
  typescript_config: [
    'tsconfig.json',
    'tsconfig.app.json',
    'tsconfig.editor.json',
    'tsconfig.spec.json',
    'tsconfig.base.json',
    'tsconfig.build.json',
    'tsconfig.eslint.json',
    'tsconfig.lib.json',
    'tsconfig.lib.prod.json',
    'tsconfig.node.json',
    'tsconfig.test.json',
    'tsconfig.e2e.json',
    'tsconfig.web.json',
    'tsconfig.webworker.json',
    'tsconfig.worker.json',
    'tsconfig.config.json',
    'tsconfig.vitest.json',
    'tsconfig.cjs.json',
    'tsconfig.esm.json',
    'tsconfig.mjs.json',
    'tsconfig.doc.json',
  ],
  v: ['vpkg.json', 'v.mod'],
  vite: [
    'vite.config.js',
    'vite.config.mjs',
    'vite.config.cjs',
    'vite.config.ts',
    'vite.config.cts',
    'vite.config.mts',
    'vite.config.js',
    'vite.config.mjs',
    'vite.config.cjs',
    'vite.config.ts',
    'vite.config.cts',
    'vite.config.mts',
  ],
  vitest: [
    'vitest.config.js',
    'vitest.config.mjs',
    'vitest.config.cjs',
    'vitest.config.ts',
    'vitest.config.cts',
    'vitest.config.mts',
    'vitest.config.js',
    'vitest.config.mjs',
    'vitest.config.cjs',
    'vitest.config.ts',
    'vitest.config.cts',
    'vitest.config.mts',
  ],
  vue_config: [
    'vue.config.js',
    'vue.config.ts',
    'vetur.config.js',
    'vetur.config.ts',
    'volar.config.js',
  ],
  windi: [
    'windi.config.js',
    'windi.config.cjs',
    'windi.config.ts',
    'windi.config.cts',
    'windi.config.json',
  ],
  yaml: ['.yamllint', '.yamllint.yml', '.yamllint.yaml'],
}
